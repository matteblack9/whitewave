import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id("org.springframework.boot") version "3.1.5"
    id("io.spring.dependency-management") version "1.1.0"

//    kotlin("jvm") version "1.7.22"
//    kotlin("plugin.spring") version "1.7.22"
    kotlin("jvm") version "1.8.22"
    kotlin("plugin.spring") version "1.8.22"
}

buildscript {
    extra.apply {
        // version
        set("gson_version", "2.8.5")
    }
}

allprojects {
    apply(plugin = "java")
    group = "com.whitewave"
    description = "WhiteWave"
    version = "0.0.1-SNAPSHOT"
//    java.sourceCompatibility = JavaVersion.VERSION_1_8
//    java.targetCompatibility = JavaVersion.VERSION_1_8
    java.sourceCompatibility = JavaVersion.VERSION_17
    java.targetCompatibility = JavaVersion.VERSION_17
    repositories {
        mavenLocal()
        maven {
            url = uri("https://s01.oss.sonatype.org/content/repositories/snapshots")
            url = uri("https://repo.maven.apache.org/maven2/")
        }
    }

//    configurations{
//        all {
//        }
//    }
}

subprojects {
    apply(plugin = "org.springframework.boot" )
    apply(plugin = "io.spring.dependency-management" )
    apply(plugin = "org.jetbrains.kotlin.plugin.spring" )
    dependencies {


        // kotlin
        implementation("org.jetbrains.kotlin:kotlin-reflect")
//        implementation("org.jetbrains.kotlin:kotlin-stdlib")
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactor")
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core")
        implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.15.3")
        implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1")

        // ?
        implementation("io.ktor:ktor-client-core-jvm:2.3.6")
        implementation("io.ktor:ktor-client-apache5-jvm:2.3.6")
        implementation("io.ktor:ktor-client-json:2.3.6")
        implementation("io.ktor:ktor-client-serialization:2.3.6")

        val gson_version = rootProject.extra["gson_version"]
        implementation("com.google.code.gson:gson:${gson_version}")


        implementation("org.bitbucket.tek-nik:spring-swagger-simplified:1.0.2")
        implementation("io.github.amithkoujalgi:ollama4j:1.0-SNAPSHOT")
        implementation("org.reactivestreams:reactive-streams:1.0.0")
        implementation("org.postgresql:postgresql:42.6.0")
        runtimeOnly("org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.7.3")
        testImplementation("junit:junit:4.13.2")
        testImplementation("org.springframework.boot:spring-boot-starter-test:3.1.5")
        compileOnly("org.projectlombok:lombok:1.18.24")
    }

//    publishing {
//        publications.create<MavenPublication>("maven") {
//            from(components["java"])
//        }
//    }

    tasks.withType<KotlinCompile>() {
        kotlinOptions {
            freeCompilerArgs = listOf("-Xjsr305=strict")
//            jvmTarget = "1.8"
            jvmTarget = "17"
        }
    }

    tasks.withType<JavaCompile>() {
        options.encoding = "UTF-8"
    }

    tasks.withType<Javadoc>() {
        options.encoding = "UTF-8"
    }
}

